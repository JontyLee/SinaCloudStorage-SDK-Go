name: S3 Cli Build & Release

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    paths:
      - 'cli/**'  
      - '.github/workflows/**'
  release:
    types: [published]  # 当 Release 发布时触发

jobs:
  build:
    name: Build && Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Go Version
        id: go-version
        run: |
          if [[ "${{ matrix.os }}" = "windows" ]] && [[ "${{ matrix.arch }}" = "arm64" ]]; then
              echo "version=1.24" >> $GITHUB_OUTPUT
          else
              echo "version=$(grep '^go' go.mod | cut -d' ' -f2)" >> $GITHUB_OUTPUT
          fi
      - name: Setup Go Version
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.go-version.outputs.version }}

      - name: Setup Version Info
        id: version_info
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          BUILD_TIME=$(date +%s)
          GIT_COMMIT=$(git rev-parse HEAD)
          echo "VERSION=$VERSION"
          echo "BUILD_TIME=$BUILD_TIME"
          echo "GIT_COMMIT=$GIT_COMMIT"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
          echo "GIT_COMMIT=$GIT_COMMIT" >> $GITHUB_ENV
      
      - name: Build Cli S3
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          OUTPUT_NAME="s3-${{ matrix.os }}-${{ matrix.arch }}-go${{ steps.go-version.outputs.version }}"
          # Windows 添加 .exe 后缀
          if [ "${{ matrix.os }}" = "windows" ]; then
              OUTPUT_NAME="$OUTPUT_NAME.exe"
          fi
          echo "Building $OUTPUT_NAME"

          # 注入环境变量
          echo "OUTPUT_NAME=${OUTPUT_NAME}" >> $GITHUB_ENV
         
          mkdir -p bin
          # 执行构建
          go build -ldflags "-X 'github.com/SinaCloudStorage/SinaCloudStorage-SDK-Go/action.Ver=${VERSION}' -X 'github.com/SinaCloudStorage/SinaCloudStorage-SDK-Go/action.BuildTime=${BUILD_TIME}' -X 'github.com/SinaCloudStorage/SinaCloudStorage-SDK-Go/action.GitCommit=${GIT_COMMIT}'" -o ./bin/$OUTPUT_NAME ./cli

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: bin/

  release:
    name: Create Release
    needs: build  # 依赖构建任务 
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # 仅在创建 tag 时触发
    
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: bin
    
    - name: Create Release
      uses: softprops/action-gh-release@v1  # 推荐替代已归档的官方 Action 
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: |
          bin/s3-*
        draft: false
        prerelease: false
